---
name: "ServiceNow Update Change Request"

on:
  workflow_call:
    inputs:
      environment:
        description: 'Target environment (dev/qa/prod)'
        required: true
        type: string
      change_request_number:
        description: 'ServiceNow change request number (e.g., CHG0123456)'
        required: true
        type: string
      deployment_status:
        description: 'Deployment job result (success/failure)'
        required: true
        type: string
      running_pods:
        description: 'Number of running pods'
        required: false
        type: string
      total_pods:
        description: 'Total number of pods'
        required: false
        type: string
      frontend_url:
        description: 'Frontend application URL'
        required: false
        type: string

permissions:
  contents: read

jobs:
  update-change:
    name: "Update Change Request (${{ inputs.environment }})"
    runs-on: ubuntu-latest

    steps:
      - name: Prepare Work Notes
        id: prepare
        run: |
          STATUS="${{ inputs.deployment_status }}"
          ENV="${{ inputs.environment }}"
          RUNNING="${{ inputs.running_pods }}"
          TOTAL="${{ inputs.total_pods }}"
          URL="${{ inputs.frontend_url }}"

          # Build work notes based on deployment status
          if [ "$STATUS" = "success" ]; then
            NOTES="‚úÖ Deployment completed successfully to ${ENV} environment

Environment: ${ENV}
Namespace: microservices-${ENV}
Status: success"

            # Add pod information if available
            if [ -n "$RUNNING" ] && [ -n "$TOTAL" ]; then
              NOTES="${NOTES}
Running Pods: ${RUNNING}/${TOTAL}"
            fi

            # Add frontend URL if available
            if [ -n "$URL" ] && [ "$URL" != "pending" ]; then
              NOTES="${NOTES}
Frontend URL: ${URL}"
            fi

            NOTES="${NOTES}
Commit: ${{ github.sha }}
Triggered by: @${{ github.actor }}
Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

All services deployed and healthy."

          else
            NOTES="‚ùå Deployment failed in ${ENV} environment

Environment: ${ENV}
Namespace: microservices-${ENV}
Status: failure"

            # Add pod information if available
            if [ -n "$RUNNING" ] && [ -n "$TOTAL" ]; then
              NOTES="${NOTES}
Running Pods: ${RUNNING}/${TOTAL}"
            fi

            NOTES="${NOTES}
Commit: ${{ github.sha }}
Triggered by: @${{ github.actor }}
Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

Please review workflow logs for error details."
          fi

          # Save to environment
          echo "WORK_NOTES<<EOF" >> $GITHUB_ENV
          echo "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update Change Request via REST API
        id: update
        run: |
          CHANGE_NUM="${{ inputs.change_request_number }}"

          echo "üîÑ Updating change request: $CHANGE_NUM"

          # Build JSON payload
          PAYLOAD=$(jq -n \
            --arg work_notes "$WORK_NOTES" \
            --arg state "-1" \
            '{
              work_notes: $work_notes,
              state: $state
            }')

          echo "Payload:"
          echo "$PAYLOAD" | jq '.'

          # Make REST API call
          RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" \
            -u "${{ secrets.SERVICENOW_USERNAME }}:${{ secrets.SERVICENOW_PASSWORD }}" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -X PATCH \
            -d "$PAYLOAD" \
            "${{ secrets.SERVICENOW_INSTANCE_URL }}/api/now/table/change_request?sysparm_query=number=${CHANGE_NUM}")

          # Parse response
          HTTP_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE:" | cut -d':' -f2)
          BODY=$(echo "$RESPONSE" | sed '/HTTP_CODE:/d')

          echo "HTTP Status: $HTTP_CODE"

          if [ "$HTTP_CODE" = "200" ]; then
            echo "‚úÖ Successfully updated change request"
            echo "update_result=success" >> $GITHUB_OUTPUT

            # Extract sys_id from response
            SYS_ID=$(echo "$BODY" | jq -r '.result[0].sys_id // .result.sys_id // empty')
            if [ -n "$SYS_ID" ]; then
              echo "sys_id=$SYS_ID" >> $GITHUB_OUTPUT
            fi
          else
            echo "‚ùå Failed to update change request (HTTP $HTTP_CODE)"
            echo "$BODY" | jq '.' || echo "$BODY"
            echo "update_result=failure" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Create Summary
        if: always()
        run: |
          CHANGE_NUM="${{ inputs.change_request_number }}"
          STATUS="${{ inputs.deployment_status }}"
          UPDATE_RESULT="${{ steps.update.outputs.update_result }}"
          ENV="${{ inputs.environment }}"

          echo "## üìù ServiceNow Change Request Update" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Change Request | **${CHANGE_NUM}** |" >> $GITHUB_STEP_SUMMARY
          echo "| Environment | ${ENV} |" >> $GITHUB_STEP_SUMMARY
          echo "| Deployment Status | ${STATUS} |" >> $GITHUB_STEP_SUMMARY
          echo "| Update Result | ${UPDATE_RESULT:-failure} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Add link to ServiceNow
          if [ -n "${{ steps.update.outputs.sys_id }}" ]; then
            echo "üîó [View in ServiceNow](${{ secrets.SERVICENOW_INSTANCE_URL }}/change_request.do?sys_id=${{ steps.update.outputs.sys_id }})" >> $GITHUB_STEP_SUMMARY
          else
            echo "üîó [Search in ServiceNow](${{ secrets.SERVICENOW_INSTANCE_URL }}/change_request_list.do?sysparm_query=number=${CHANGE_NUM})" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "$UPDATE_RESULT" = "failure" ]; then
            echo "### ‚ö†Ô∏è Update Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The change request was not updated automatically. Please:" >> $GITHUB_STEP_SUMMARY
            echo "1. Manually update the change request in ServiceNow" >> $GITHUB_STEP_SUMMARY
            echo "2. Verify authentication credentials" >> $GITHUB_STEP_SUMMARY
            echo "3. Check user has 'itil' role" >> $GITHUB_STEP_SUMMARY
          fi
