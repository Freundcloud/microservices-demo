# ============================================================================
# SonarCloud Configuration for Microservices Demo
# ============================================================================

# Organization and Project
sonar.organization=freundcloud
sonar.projectKey=Freundcloud_microservices-demo
sonar.projectName=Microservices Demo (AWS EKS)
sonar.projectVersion=1.2.4

# ============================================================================
# Source Code Configuration
# ============================================================================

# Source directories (all services)
sonar.sources=src

# Test directories (explicitly list existing test directories)
# Note: SonarCloud doesn't support wildcards in sonar.tests
# Only including directories that actually exist
sonar.tests=src/cartservice/tests

# Exclusions (generated files, vendor, dependencies)
sonar.exclusions=\
  **/node_modules/**,\
  **/vendor/**,\
  **/*.pb.go,\
  **/pb/**,\
  **/build/**,\
  **/dist/**,\
  **/bin/**,\
  **/obj/**,\
  **/*.min.js,\
  **/gradlew,\
  **/gradlew.bat,\
  **/gradle/wrapper/**

# Test exclusions
sonar.test.exclusions=\
  **/test/**,\
  **/tests/**,\
  **/*_test.go,\
  **/*Test.java,\
  **/*Tests.cs

# ============================================================================
# Language-Specific Configuration
# ============================================================================

# Go (frontend, checkoutservice, productcatalogservice, shippingservice)
sonar.go.coverage.reportPaths=**/coverage.out

# Python (emailservice, recommendationservice, loadgenerator, shoppingassistantservice)
sonar.python.coverage.reportPaths=**/coverage.xml
sonar.python.version=3.12

# JavaScript/Node.js (currencyservice, paymentservice)
sonar.javascript.lcov.reportPaths=**/coverage/lcov.info

# Java (adservice, shoppingassistantservice)
sonar.java.source=21
sonar.java.binaries=\
  src/adservice/build/classes,\
  src/shoppingassistantservice/build/classes
sonar.java.libraries=\
  src/adservice/build/libs/**/*.jar,\
  src/shoppingassistantservice/build/libs/**/*.jar

# C# (cartservice)
sonar.cs.dotcover.reportsPaths=**/dotCover.html
sonar.cs.opencover.reportsPaths=**/opencover.xml

# ============================================================================
# Code Coverage
# ============================================================================

# Coverage exclusions (same as source exclusions)
sonar.coverage.exclusions=\
  **/node_modules/**,\
  **/vendor/**,\
  **/*.pb.go,\
  **/pb/**,\
  **/test/**,\
  **/tests/**,\
  **/*_test.go,\
  **/*Test.java,\
  **/*Tests.cs

# ============================================================================
# Duplication Detection
# ============================================================================

# Minimum lines for duplication detection
sonar.cpd.minimumLines=10

# Duplication exclusions (protobuf generated code)
sonar.cpd.exclusions=\
  **/*.pb.go,\
  **/pb/**

# ============================================================================
# Analysis Configuration
# ============================================================================

# SCM (Git)
sonar.scm.provider=git

# Encoding
sonar.sourceEncoding=UTF-8

# Branch analysis
# sonar.branch.name=main  # Handled by GitHub Actions

# Pull request analysis
# sonar.pullrequest.key=  # Handled by GitHub Actions
# sonar.pullrequest.branch=  # Handled by GitHub Actions
# sonar.pullrequest.base=  # Handled by GitHub Actions

# ============================================================================
# Links
# ============================================================================

sonar.links.homepage=https://github.com/Freundcloud/microservices-demo
sonar.links.ci=https://github.com/Freundcloud/microservices-demo/actions
sonar.links.issue=https://github.com/Freundcloud/microservices-demo/issues
sonar.links.scm=https://github.com/Freundcloud/microservices-demo
